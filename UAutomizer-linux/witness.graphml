<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<key id="programfile" attr.name="programfile" for="graph"/>
<key id="programhash" attr.name="programhash" for="graph"/>
<key id="sourcecodelang" attr.name="sourcecodelang" for="graph"/>
<key id="producer" attr.name="producer" for="graph"/>
<key id="specification" attr.name="specification" for="graph"/>
<key id="creationtime" attr.name="creationtime" for="graph"/>
<key id="witness-type" attr.name="witness-type" for="graph"/>
<key id="architecture" attr.name="architecture" for="graph"/>
<key id="entry" attr.name="entry" for="node">
<default>false</default>
</key>
<key id="nodetype" attr.name="nodetype" for="node">
<default>path</default>
</key>
<key id="violation" attr.name="violation" for="node">
<default>false</default>
</key>
<key id="invariant" attr.name="invariant" for="node">
<default>true</default>
</key>
<key id="endline" attr.name="endline" for="edge"/>
<key id="enterLoopHead" attr.name="enterLoopHead" for="edge">
<default>false</default>
</key>
<key id="enterFunction" attr.name="enterFunction" for="edge"/>
<key id="startline" attr.name="startline" for="edge"/>
<key id="returnFrom" attr.name="returnFrom" for="edge"/>
<key id="assumption" attr.name="assumption" for="edge"/>
<key id="tokens" attr.name="tokens" for="edge"/>
<key id="originfile" attr.name="originfile" for="edge">
<default>/home/vm/c-files/list-simple/sll2n_prepend_unequal_conj1.c</default>
</key>
<key id="sourcecode" attr.name="sourcecode" for="edge"/>
<graph edgedefault="directed">
<data key="programfile">/home/vm/c-files/list-simple/sll2n_prepend_unequal_conj1.c</data>
<data key="programhash">db300813f4198d6cc439c6731e33557f40c2b57d079a988b20de369303fd9cc8</data>
<data key="sourcecodelang">C</data>
<data key="producer">Automizer</data>
<data key="specification">CHECK( init(main()), LTL(G ! call(reach_error())) )
</data>
<data key="creationtime">2023-07-09T17:21:00Z</data>
<data key="witness-type">correctness_witness</data>
<data key="architecture">32bit</data>
<node id="N0">
<data key="entry">true</data>
</node>
<node id="N1"/>
<node id="N2"/>
<node id="N3"/>
<node id="N4"/>
<node id="N5"/>
<node id="N6"/>
<node id="N7">
<data key="invariant">larger_than == 0</data>
</node>
<node id="N8"/>
<node id="N9"/>
<node id="N10"/>
<node id="N11"/>
<node id="N12"/>
<node id="N13"/>
<node id="N14"/>
<node id="N15"/>
<node id="N16"/>
<node id="N17"/>
<node id="N18"/>
<node id="N19"/>
<node id="N20"/>
<node id="N21"/>
<node id="N22"/>
<node id="N23"/>
<node id="N24"/>
<node id="N25"/>
<node id="N26"/>
<node id="N27"/>
<node id="N28"/>
<node id="N29"/>
<node id="N30"/>
<node id="N31"/>
<node id="N32"/>
<node id="N33"/>
<node id="N34"/>
<node id="N35"/>
<node id="N36"/>
<node id="N37"/>
<node id="N38"/>
<node id="N39"/>
<node id="N40"/>
<node id="N41"/>
<node id="N42"/>
<node id="N43"/>
<node id="N44"/>
<node id="N45"/>
<node id="N46"/>
<node id="N47"/>
<node id="N48"/>
<node id="N49"/>
<node id="N50"/>
<node id="N51"/>
<node id="N52"/>
<node id="N53"/>
<node id="N54"/>
<node id="N55"/>
<node id="N56"/>
<node id="N57"/>
<node id="N58"/>
<node id="N59"/>
<node id="N60"/>
<node id="N61"/>
<node id="N62"/>
<node id="N63"/>
<node id="N64"/>
<node id="N65"/>
<node id="N66"/>
<node id="N67"/>
<node id="N68">
<data key="invariant">0</data>
</node>
<node id="N69"/>
<node id="N70"/>
<node id="N71"/>
<node id="N72"/>
<node id="N73"/>
<node id="N74"/>
<node id="N75"/>
<node id="N76"/>
<node id="N77"/>
<node id="N78"/>
<node id="N79"/>
<node id="N80"/>
<node id="N81"/>
<node id="N82"/>
<node id="N83"/>
<node id="N84"/>
<node id="N85"/>
<node id="N86"/>
<node id="N87"/>
<node id="N88"/>
<node id="N89"/>
<node id="N90"/>
<node id="N91"/>
<node id="N92"/>
<node id="N93"/>
<node id="N94"/>
<node id="N95"/>
<node id="N96"/>
<node id="N97"/>
<node id="N98"/>
<node id="N99"/>
<node id="N100"/>
<node id="N101"/>
<node id="N102"/>
<edge id="E0" source="N0" target="N1">
<data key="endline">65</data>
<data key="startline">65</data>
<data key="sourcecode">_get_nondet_int(0)</data>
</edge>
<edge id="E1" source="N1" target="N2">
<data key="endline">65</data>
<data key="startline">65</data>
<data key="sourcecode">_get_nondet_int(0)</data>
</edge>
<edge id="E2" source="N2" target="N3">
<data key="endline">65</data>
<data key="startline">65</data>
<data key="sourcecode">_get_nondet_int(0)</data>
</edge>
<edge id="E3" source="N3" target="N4">
<data key="endline">65</data>
<data key="startline">65</data>
<data key="sourcecode">_get_nondet_int(0)</data>
</edge>
<edge id="E4" source="N4" target="N5">
<data key="endline">22</data>
<data key="startline">22</data>
<data key="sourcecode">__VERIFIER_nondet_int()</data>
</edge>
<edge id="E5" source="N5" target="N6">
<data key="endline">22</data>
<data key="startline">22</data>
<data key="sourcecode">int res = __VERIFIER_nondet_int();</data>
</edge>
<edge id="E6" source="N6" target="N7">
<data key="endline">22</data>
<data key="enterLoopHead">true</data>
<data key="startline">22</data>
<data key="sourcecode">__VERIFIER_nondet_int()</data>
</edge>
<edge id="E7" source="N7" target="N8">
<data key="endline">23</data>
<data key="startline">23</data>
<data key="sourcecode">[!(res &lt;= larger_than)]</data>
</edge>
<edge id="E8" source="N7" target="N9">
<data key="endline">23</data>
<data key="startline">23</data>
<data key="sourcecode">[res &lt;= larger_than]</data>
</edge>
<edge id="E9" source="N8" target="N10">
<data key="endline">24</data>
<data key="startline">24</data>
<data key="sourcecode">__VERIFIER_nondet_int()</data>
</edge>
<edge id="E10" source="N9" target="N11">
<data key="endline">26</data>
<data key="startline">26</data>
<data key="sourcecode">return res;</data>
</edge>
<edge id="E11" source="N10" target="N12">
<data key="endline">24</data>
<data key="startline">24</data>
<data key="sourcecode">res = __VERIFIER_nondet_int()</data>
</edge>
<edge id="E12" source="N11" target="N13">
<data key="endline">65</data>
<data key="startline">65</data>
<data key="sourcecode">_get_nondet_int(0)</data>
</edge>
<edge id="E13" source="N12" target="N7">
<data key="endline">24</data>
<data key="enterLoopHead">true</data>
<data key="startline">24</data>
<data key="sourcecode">__VERIFIER_nondet_int()</data>
</edge>
<edge id="E14" source="N13" target="N14">
<data key="endline">65</data>
<data key="startline">65</data>
<data key="sourcecode">_get_nondet_int(0)</data>
</edge>
<edge id="E15" source="N14" target="N15">
<data key="endline">65</data>
<data key="startline">65</data>
<data key="sourcecode">const int len = _get_nondet_int(0);</data>
</edge>
<edge id="E16" source="N15" target="N16">
<data key="endline">65</data>
<data key="startline">65</data>
<data key="sourcecode">_get_nondet_int(0)</data>
</edge>
<edge id="E17" source="N16" target="N17">
<data key="endline">66</data>
<data key="startline">66</data>
<data key="sourcecode">const int data = 1;</data>
</edge>
<edge id="E18" source="N17" target="N18">
<data key="endline">67</data>
<data key="startline">67</data>
<data key="sourcecode">SLL s = sll_create(len, data);</data>
</edge>
<edge id="E19" source="N18" target="N19">
<data key="endline">67</data>
<data key="startline">67</data>
<data key="sourcecode">sll_create(len, data)</data>
</edge>
<edge id="E20" source="N19" target="N20">
<data key="endline">67</data>
<data key="startline">67</data>
<data key="sourcecode">sll_create(len, data)</data>
</edge>
<edge id="E21" source="N20" target="N21">
<data key="endline">67</data>
<data key="startline">67</data>
<data key="sourcecode">sll_create(len, data)</data>
</edge>
<edge id="E22" source="N21" target="N22">
<data key="endline">67</data>
<data key="startline">67</data>
<data key="sourcecode">sll_create(len, data)</data>
</edge>
<edge id="E23" source="N22" target="N23">
<data key="endline">40</data>
<data key="startline">40</data>
<data key="sourcecode">SLL head = NULL;</data>
</edge>
<edge id="E24" source="N23" target="N24">
<data key="endline">41</data>
<data key="startline">41</data>
<data key="sourcecode">[!(len &gt; 0)]</data>
</edge>
<edge id="E25" source="N23" target="N25">
<data key="endline">41</data>
<data key="startline">41</data>
<data key="sourcecode">[len &gt; 0]</data>
</edge>
<edge id="E26" source="N24" target="N26">
<data key="endline">42</data>
<data key="startline">42</data>
<data key="sourcecode">node_create(data)</data>
</edge>
<edge id="E27" source="N24" target="N27">
<data key="endline">42</data>
<data key="startline">42</data>
<data key="sourcecode">node_create(data)</data>
</edge>
<edge id="E28" source="N25" target="N28">
<data key="endline">46</data>
<data key="startline">46</data>
<data key="sourcecode">return head;</data>
</edge>
<edge id="E29" source="N26" target="N29">
<data key="endline">42</data>
<data key="startline">42</data>
<data key="sourcecode">SLL new_head = node_create(data);</data>
</edge>
<edge id="E30" source="N27" target="N30">
<data key="endline">30</data>
<data key="startline">30</data>
<data key="sourcecode">malloc(sizeof(struct node))</data>
</edge>
<edge id="E31" source="N28" target="N31">
<data key="endline">67</data>
<data key="startline">67</data>
<data key="sourcecode">sll_create(len, data)</data>
</edge>
<edge id="E32" source="N29" target="N32">
<data key="endline">42</data>
<data key="startline">42</data>
<data key="sourcecode">node_create(data)</data>
</edge>
<edge id="E33" source="N30" target="N33">
<data key="endline">30</data>
<data key="startline">30</data>
<data key="sourcecode">SLL temp = (SLL) malloc(sizeof(struct node));</data>
</edge>
<edge id="E34" source="N31" target="N34">
<data key="endline">67</data>
<data key="startline">67</data>
<data key="sourcecode">SLL s = sll_create(len, data);</data>
</edge>
<edge id="E35" source="N32" target="N35">
<data key="endline">43</data>
<data key="startline">43</data>
<data key="sourcecode">new_head-&gt;next = head</data>
</edge>
<edge id="E36" source="N33" target="N36">
<data key="endline">30</data>
<data key="startline">30</data>
<data key="sourcecode">malloc(sizeof(struct node))</data>
</edge>
<edge id="E37" source="N34" target="N37">
<data key="endline">67</data>
<data key="startline">67</data>
<data key="sourcecode">sll_create(len, data)</data>
</edge>
<edge id="E38" source="N35" target="N38">
<data key="endline">44</data>
<data key="startline">44</data>
<data key="sourcecode">head = new_head</data>
</edge>
<edge id="E39" source="N36" target="N39">
<data key="endline">31</data>
<data key="startline">31</data>
<data key="sourcecode">[NULL == temp]</data>
</edge>
<edge id="E40" source="N36" target="N40">
<data key="endline">31</data>
<data key="startline">31</data>
<data key="sourcecode">[!(NULL == temp)]</data>
</edge>
<edge id="E41" source="N37" target="N41">
<data key="endline">69</data>
<data key="startline">69</data>
<data key="sourcecode">const int uneq = 5;</data>
</edge>
<edge id="E42" source="N38" target="N42">
<data key="endline">41</data>
<data key="startline">41</data>
<data key="sourcecode">len--</data>
</edge>
<edge id="E43" source="N39" target="N43">
<data key="endline">32</data>
<data key="startline">32</data>
<data key="sourcecode">myexit(1)</data>
</edge>
<edge id="E44" source="N40" target="N44">
<data key="endline">34</data>
<data key="startline">34</data>
<data key="sourcecode">temp-&gt;next = NULL</data>
</edge>
<edge id="E45" source="N41" target="N45">
<data key="endline">70</data>
<data key="startline">70</data>
<data key="sourcecode">sll_prepend(&amp;s, uneq)</data>
</edge>
<edge id="E46" source="N42" target="N46">
<data key="endline">41</data>
<data key="startline">41</data>
<data key="sourcecode">len--</data>
</edge>
<edge id="E47" source="N43" target="N47">
<data key="endline">32</data>
<data key="startline">32</data>
<data key="sourcecode">myexit(1)</data>
</edge>
<edge id="E48" source="N44" target="N48">
<data key="endline">35</data>
<data key="startline">35</data>
<data key="sourcecode">temp-&gt;data = data</data>
</edge>
<edge id="E49" source="N45" target="N49">
<data key="endline">70</data>
<data key="startline">70</data>
<data key="sourcecode">sll_prepend(&amp;s, uneq)</data>
</edge>
<edge id="E50" source="N46" target="N23">
<data key="endline">41</data>
<data key="startline">41</data>
<data key="sourcecode">len--</data>
</edge>
<edge id="E51" source="N47" target="N50">
<data key="endline">32</data>
<data key="startline">32</data>
<data key="sourcecode">myexit(1)</data>
</edge>
<edge id="E52" source="N48" target="N51">
<data key="endline">36</data>
<data key="startline">36</data>
<data key="sourcecode">return temp;</data>
</edge>
<edge id="E53" source="N49" target="N52">
<data key="endline">70</data>
<data key="startline">70</data>
<data key="sourcecode">sll_prepend(&amp;s, uneq)</data>
</edge>
<edge id="E54" source="N50" target="N53"/>
<edge id="E55" source="N51" target="N26">
<data key="endline">42</data>
<data key="startline">42</data>
<data key="sourcecode">node_create(data)</data>
</edge>
<edge id="E56" source="N51" target="N54">
<data key="endline">58</data>
<data key="startline">58</data>
<data key="sourcecode">node_create(data)</data>
</edge>
<edge id="E57" source="N52" target="N54">
<data key="endline">58</data>
<data key="startline">58</data>
<data key="sourcecode">node_create(data)</data>
</edge>
<edge id="E58" source="N52" target="N27">
<data key="endline">58</data>
<data key="startline">58</data>
<data key="sourcecode">node_create(data)</data>
</edge>
<edge id="E59" source="N53" target="N53">
<data key="endline">18</data>
<data key="startline">18</data>
<data key="sourcecode">_EXIT: goto _EXIT;</data>
</edge>
<edge id="E60" source="N54" target="N55">
<data key="endline">58</data>
<data key="startline">58</data>
<data key="sourcecode">SLL new_head = node_create(data);</data>
</edge>
<edge id="E61" source="N55" target="N56">
<data key="endline">58</data>
<data key="startline">58</data>
<data key="sourcecode">node_create(data)</data>
</edge>
<edge id="E62" source="N56" target="N57">
<data key="endline">59</data>
<data key="startline">59</data>
<data key="sourcecode">\read(*head)</data>
</edge>
<edge id="E63" source="N57" target="N58">
<data key="endline">59</data>
<data key="startline">59</data>
<data key="sourcecode">new_head-&gt;next = *head</data>
</edge>
<edge id="E64" source="N58" target="N59">
<data key="endline">59</data>
<data key="startline">59</data>
<data key="sourcecode">\read(*head)</data>
</edge>
<edge id="E65" source="N59" target="N60">
<data key="endline">60</data>
<data key="startline">60</data>
<data key="sourcecode">*head = new_head</data>
</edge>
<edge id="E66" source="N60" target="N61">
<data key="endline">70</data>
<data key="startline">70</data>
<data key="sourcecode">sll_prepend(&amp;s, uneq)</data>
</edge>
<edge id="E67" source="N61" target="N62">
<data key="endline">72</data>
<data key="startline">72</data>
<data key="sourcecode">\read(s)</data>
</edge>
<edge id="E68" source="N62" target="N63">
<data key="endline">72</data>
<data key="startline">72</data>
<data key="sourcecode">SLL ptr = s;</data>
</edge>
<edge id="E69" source="N63" target="N64">
<data key="endline">72</data>
<data key="startline">72</data>
<data key="sourcecode">\read(s)</data>
</edge>
<edge id="E70" source="N64" target="N65">
<data key="endline">73</data>
<data key="startline">73</data>
<data key="sourcecode">ptr-&gt;data</data>
</edge>
<edge id="E71" source="N65" target="N66">
<data key="endline">73</data>
<data key="startline">73</data>
<data key="sourcecode">[uneq != ptr-&gt;data]</data>
</edge>
<edge id="E72" source="N65" target="N67">
<data key="endline">73</data>
<data key="startline">73</data>
<data key="sourcecode">[!(uneq != ptr-&gt;data)]</data>
</edge>
<edge id="E73" source="N66" target="N68">
<data key="endline">73</data>
<data key="enterLoopHead">true</data>
<data key="startline">73</data>
<data key="sourcecode">ptr-&gt;data</data>
</edge>
<edge id="E74" source="N67" target="N69">
<data key="endline">73</data>
<data key="startline">73</data>
<data key="sourcecode">ptr-&gt;data</data>
</edge>
<edge id="E75" source="N68" target="N70">
<data key="endline">87</data>
<data key="startline">87</data>
<data key="sourcecode">reach_error()</data>
</edge>
<edge id="E76" source="N68" target="N71">
<data key="endline">87</data>
<data key="startline">87</data>
<data key="sourcecode">reach_error()</data>
</edge>
<edge id="E77" source="N69" target="N72">
<data key="endline">76</data>
<data key="startline">76</data>
<data key="sourcecode">ptr-&gt;next</data>
</edge>
<edge id="E78" source="N71" target="N73">
<data key="endline">87</data>
<data key="startline">87</data>
<data key="sourcecode">abort()</data>
</edge>
<edge id="E79" source="N72" target="N74">
<data key="endline">76</data>
<data key="startline">76</data>
<data key="sourcecode">ptr = ptr-&gt;next</data>
</edge>
<edge id="E80" source="N73" target="N75">
<data key="endline">88</data>
<data key="startline">88</data>
<data key="sourcecode">return 1;</data>
</edge>
<edge id="E81" source="N74" target="N76">
<data key="endline">76</data>
<data key="startline">76</data>
<data key="sourcecode">ptr-&gt;next</data>
</edge>
<edge id="E82" source="N75" target="N77">
<data key="endline">67</data>
<data key="startline">67</data>
<data key="sourcecode">SLL s = sll_create(len, data);</data>
</edge>
<edge id="E83" source="N76" target="N78">
<data key="endline">77</data>
<data key="startline">77</data>
<data key="sourcecode">int count = 1;</data>
</edge>
<edge id="E84" source="N77" target="N79">
<data key="endline">88</data>
<data key="startline">88</data>
<data key="sourcecode">return 1;</data>
</edge>
<edge id="E85" source="N78" target="N80">
<data key="endline">78</data>
<data key="startline">78</data>
<data key="sourcecode">[!(\read(ptr))]</data>
</edge>
<edge id="E86" source="N78" target="N81">
<data key="endline">78</data>
<data key="startline">78</data>
<data key="sourcecode">[\read(ptr)]</data>
</edge>
<edge id="E87" source="N80" target="N82">
<data key="endline">79</data>
<data key="startline">79</data>
<data key="sourcecode">ptr-&gt;next</data>
</edge>
<edge id="E88" source="N81" target="N83">
<data key="endline">84</data>
<data key="startline">84</data>
<data key="sourcecode">\read(s)</data>
</edge>
<edge id="E89" source="N82" target="N84">
<data key="endline">79</data>
<data key="startline">79</data>
<data key="sourcecode">SLL temp = ptr-&gt;next;</data>
</edge>
<edge id="E90" source="N83" target="N85">
<data key="endline">84</data>
<data key="startline">84</data>
<data key="sourcecode">sll_destroy(s)</data>
</edge>
<edge id="E91" source="N84" target="N86">
<data key="endline">79</data>
<data key="startline">79</data>
<data key="sourcecode">ptr-&gt;next</data>
</edge>
<edge id="E92" source="N85" target="N87">
<data key="endline">84</data>
<data key="startline">84</data>
<data key="sourcecode">sll_destroy(s)</data>
</edge>
<edge id="E93" source="N86" target="N88">
<data key="endline">80</data>
<data key="startline">80</data>
<data key="sourcecode">ptr = temp</data>
</edge>
<edge id="E94" source="N87" target="N89">
<data key="endline">84</data>
<data key="startline">84</data>
<data key="sourcecode">sll_destroy(s)</data>
</edge>
<edge id="E95" source="N88" target="N90">
<data key="endline">81</data>
<data key="startline">81</data>
<data key="sourcecode">count++</data>
</edge>
<edge id="E96" source="N89" target="N91"/>
<edge id="E97" source="N90" target="N92">
<data key="endline">81</data>
<data key="startline">81</data>
<data key="sourcecode">count++</data>
</edge>
<edge id="E98" source="N91" target="N93">
<data key="endline">50</data>
<data key="startline">50</data>
<data key="sourcecode">[!(\read(head))]</data>
</edge>
<edge id="E99" source="N91" target="N94">
<data key="endline">50</data>
<data key="startline">50</data>
<data key="sourcecode">[\read(head)]</data>
</edge>
<edge id="E100" source="N92" target="N78">
<data key="endline">81</data>
<data key="startline">81</data>
<data key="sourcecode">count++</data>
</edge>
<edge id="E101" source="N93" target="N95">
<data key="endline">51</data>
<data key="startline">51</data>
<data key="sourcecode">head-&gt;next</data>
</edge>
<edge id="E102" source="N94" target="N96">
<data key="endline">84</data>
<data key="startline">84</data>
<data key="sourcecode">sll_destroy(s)</data>
</edge>
<edge id="E103" source="N95" target="N97">
<data key="endline">51</data>
<data key="startline">51</data>
<data key="sourcecode">SLL temp = head-&gt;next;</data>
</edge>
<edge id="E104" source="N96" target="N98">
<data key="endline">84</data>
<data key="startline">84</data>
<data key="sourcecode">\read(s)</data>
</edge>
<edge id="E105" source="N97" target="N99">
<data key="endline">51</data>
<data key="startline">51</data>
<data key="sourcecode">head-&gt;next</data>
</edge>
<edge id="E106" source="N98" target="N100">
<data key="endline">86</data>
<data key="startline">86</data>
<data key="sourcecode">return 0;</data>
</edge>
<edge id="E107" source="N99" target="N101">
<data key="endline">52</data>
<data key="startline">52</data>
<data key="sourcecode">free(head)</data>
</edge>
<edge id="E108" source="N100" target="N102">
<data key="endline">67</data>
<data key="startline">67</data>
<data key="sourcecode">SLL s = sll_create(len, data);</data>
</edge>
<edge id="E109" source="N101" target="N91">
<data key="endline">53</data>
<data key="startline">53</data>
<data key="sourcecode">head = temp</data>
</edge>
<edge id="E110" source="N102" target="N79">
<data key="endline">86</data>
<data key="startline">86</data>
<data key="sourcecode">return 0;</data>
</edge>
</graph>
</graphml>
