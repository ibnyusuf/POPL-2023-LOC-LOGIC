// staged configuration for checking memory leaks
{
    "file": "memsafety.c",
    "analyses": [["libdgPointsToPlugin.so"]],
    "flags": ["malloc"],
    "phases": [
        {
          "instructionsRules": [
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","malloc"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t2>","1", "__INSTR_remember_malloc_calloc"]
                },
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t2>","*","realloc"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t2>", "__INSTR_check_realloc"]
                },
                "remember": "<t2>",
                "where": "before",
                "in": "*"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","<t3>","realloc"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t2>","<t1>","<t3>", "__INSTR_realloc"]
                },
                "remember": "<t2>",
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","__VERIFIER_malloc"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t2>","1", "__INSTR_remember_malloc_calloc"]
                },
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","__VERIFIER_malloc0"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t2>","1", "__INSTR_remember_malloc_calloc"]
                },
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","<t3>","calloc"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t3>","<t2>", "__INSTR_remember_malloc_calloc"]
                },
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","<t3>","__VERIFIER_calloc"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t3>","<t2>", "__INSTR_remember_malloc_calloc"]
                },
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]

            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","<t3>","__VERIFIER_calloc0"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t3>","<t2>", "__INSTR_remember_malloc_calloc"]
                },
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>", "free"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>", "__INSTR_free"]
                },
                "where": "before",
                "in": "*"
            }
          ]
        },
        {   "instructionsRules":
            [
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "ret",
                    "operands": ["*"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["__INSTR_check_leaks"]
                },
                "where": "before",
                "in": "main",
                "conditions": [{"query":["malloc"], "expectedResults": ["true"]}]
            }
            ]
      }
  ]
}

