{
    "file": "memsafety.c",
    "analyses": [["libdgPointsToPlugin.so"]],
    "flags": ["malloc"],
    "phases": [
        {
            "instructionsRules": [
            {
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["__INSTR_set_flag"]
                },
                "where": "entry",
                "in": "*"
            },
            {
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["__INSTR_destroy_allocas"]
                },
                "where": "return",
                "in": "*"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","malloc"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t2>","1", "__INSTR_remember_malloc_calloc"]
                },
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t2>","*","realloc"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t2>", "__INSTR_check_realloc"]
                },
                "remember": "<t2>",
                "where": "before",
                "in": "*"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","<t3>","realloc"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t2>","<t1>","<t3>", "__INSTR_realloc"]
                },
                "remember": "<t2>",
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","__VERIFIER_malloc"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t2>","1", "__INSTR_remember_malloc_calloc"]
                },
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","__VERIFIER_malloc0"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t2>","1", "__INSTR_remember_malloc_calloc"]
                },
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","<t3>","calloc"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t3>","<t2>", "__INSTR_remember_malloc_calloc"]
                },
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","<t3>","__VERIFIER_calloc"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t3>","<t2>", "__INSTR_remember_malloc_calloc"]
                },
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]

            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "call",
                    "operands": ["<t2>","<t3>","__VERIFIER_calloc0"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t3>","<t2>", "__INSTR_remember_malloc_calloc"]
                },
                "where": "after",
                "in": "*",
                "setFlags": [["malloc", "true"]]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>", "free"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>", "__INSTR_free"]
                },
                "where": "before",
                "in": "*"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","*", "<t4>","*","*", "llvm.memset.p0i8.i32"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","*", "<t4>","*","*", "llvm.memset.p0i8.i64"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>", "*", "<t4>", "memset"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "load",
                    "operands": ["<t1>"],
                    "getTypeSize": "<t2>",
                    "getPointerInfo": ["<t3>", "<t4>", "<t5>"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>", "<t4>", "<t5>", "<t1>", "<t2>", "__INSTR_check_bounds"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t1>", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSize", "<t1>"], "expectedResults":["true"]},
                               {"query":["isInvalid", "<t1>"], "expectedResults":["false", "maybe"]}],
                "in": "*"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "store",
                    "operands": ["<t1>", "<t2>"],
                    "getTypeSize": "<t3>",
                    "getPointerInfo": ["<t4>", "<t5>", "<t6>"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t4>", "<t5>", "<t6>", "<t2>", "<t3>", "__INSTR_check_bounds"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t2>", "<t3>"], "expectedResults":["false","maybe"]},
                               {"query":["hasKnownSize", "<t2>"], "expectedResults":["true"]},
                               {"query":["isInvalid", "<t2>"], "expectedResults":["false", "maybe"]}],
                "in": "*"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "load",
                    "operands": ["<t1>"],
                    "getTypeSize": "<t2>",
                    "getPointerInfoMinMax": ["<t3>", "<t4>", "<t5>", "<t6>", "<t7>"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>", "<t4>", "<t5>", "<t6>", "<t7>", "<t1>", "<t2>", "__INSTR_check_bounds_min_max"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t1>", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSize", "<t1>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSizes", "<t1>"], "expectedResults":["true"]},
                               {"query":["isInvalid", "<t1>"], "expectedResults":["false", "maybe"]}],
                "in": "*",
                "remember": "<t1>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "store",
                    "operands": ["<t1>", "<t2>"],
                    "getTypeSize": "<t3>",
                    "getPointerInfoMinMax": ["<t4>", "<t5>", "<t6>", "<t7>", "<t8>"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t4>", "<t5>", "<t6>", "<t7>", "<t8>", "<t2>", "<t3>", "__INSTR_check_bounds_min_max"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t2>", "<t3>"], "expectedResults":["false","maybe"]},
                               {"query":["hasKnownSize", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSizes", "<t2>"], "expectedResults":["true"]},
                               {"query":["isInvalid", "<t2>"], "expectedResults":["false", "maybe"]}],
                "in": "*",
                "remember": "<t2>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "load",
                    "operands": ["<t1>"],
                    "getTypeSize": "<t2>"
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t2>", "__INSTR_check_pointer"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t1>", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSize", "<t1>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSizes", "<t1>"], "expectedResults":["false"]},
                               {"query":["pointsToStack", "<t1>"], "expectedResults":["false", "maybe"]},
                               {"query":["pointsToHeap", "<t1>"], "expectedResults":["false", "maybe"]},
                               {"query":["pointsToGlobal", "<t1>"], "expectedResults":["false", "maybe"]},
                               {"query":["isInvalid", "<t1>"], "expectedResults":["false", "maybe"]}],
                "in": "*",
                "remember": "<t1>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "store",
                    "operands": ["<t1>", "<t2>"],
                    "getTypeSize": "<t3>"
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t2>","<t3>", "__INSTR_check_pointer"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t2>", "<t3>"], "expectedResults":["false","maybe"]},
                               {"query":["hasKnownSize", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSizes", "<t2>"], "expectedResults":["false"]},
                               {"query":["pointsToStack", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["pointsToHeap", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["pointsToGlobal", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["isInvalid", "<t2>"], "expectedResults":["false", "maybe"]}],
                "in": "*",
                "remember": "<t2>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "load",
                    "operands": ["<t1>"],
                    "getTypeSize": "<t2>"
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["__INSTR_fail"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t1>", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["isInvalid", "<t1>"], "expectedResults":["true"]}],
                "in": "*"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "store",
                    "operands": ["<t1>", "<t2>"],
                    "getTypeSize": "<t3>"
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["__INSTR_fail"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t2>", "<t3>"], "expectedResults":["false","maybe"]},
                               {"query":["isInvalid", "<t2>"], "expectedResults":["true"]}],
                "in": "*"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "load",
                    "operands": ["<t1>"],
                    "getTypeSize": "<t2>"
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>", "<t2>", "__INSTR_check_stack"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t1>", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSize", "<t1>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSizes", "<t1>"], "expectedResults":["false"]},
                               {"query":["pointsToStack", "<t1>"], "expectedResults":["true"]},
                               {"query":["isInvalid", "<t1>"], "expectedResults":["false", "maybe"]}],
                "in": "*",
                "remember": "<t1>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "store",
                    "operands": ["<t1>", "<t2>"],
                    "getTypeSize": "<t3>"
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t2>", "<t3>", "__INSTR_check_stack"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t2>", "<t3>"], "expectedResults":["false","maybe"]},
                               {"query":["hasKnownSize", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSizes", "<t2>"], "expectedResults":["false"]},
                               {"query":["pointsToStack", "<t2>"], "expectedResults":["true"]},
                               {"query":["isInvalid", "<t2>"], "expectedResults":["false", "maybe"]}],
                "in": "*",
                "remember": "<t2>"
            },

            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "load",
                    "operands": ["<t1>"],
                    "getTypeSize": "<t2>"
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>", "<t2>", "__INSTR_check_heap"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t1>", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSize", "<t1>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSizes", "<t1>"], "expectedResults":["false"]},
                               {"query":["pointsToHeap", "<t1>"], "expectedResults":["true"]},
                               {"query":["isInvalid", "<t1>"], "expectedResults":["false", "maybe"]}],
                "in": "*",
                "remember": "<t1>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "store",
                    "operands": ["<t1>", "<t2>"],
                    "getTypeSize": "<t3>"
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t2>", "<t3>", "__INSTR_check_heap"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t2>", "<t3>"], "expectedResults":["false","maybe"]},
                               {"query":["hasKnownSize", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSizes", "<t2>"], "expectedResults":["false"]},
                               {"query":["pointsToHeap", "<t2>"], "expectedResults":["true"]},
                               {"query":["isInvalid", "<t2>"], "expectedResults":["false", "maybe"]}],
                "in": "*",
                "remember": "<t2>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "load",
                    "operands": ["<t1>"],
                    "getTypeSize": "<t2>"
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>", "<t2>", "__INSTR_check_globals"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t1>", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSize", "<t1>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSizes", "<t1>"], "expectedResults":["false"]},
                               {"query":["pointsToGlobal", "<t1>"], "expectedResults":["true"]},
                               {"query":["isInvalid", "<t1>"], "expectedResults":["false", "maybe"]}],
                "in": "*",
                "remember": "<t1>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "store",
                    "operands": ["<t1>", "<t2>"],
                    "getTypeSize": "<t3>"
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t2>", "<t3>", "__INSTR_check_globals"]
                },
                "where": "before",
                "conditions": [{"query":["isValidPointer", "<t2>", "<t3>"], "expectedResults":["false","maybe"]},
                               {"query":["hasKnownSize", "<t2>"], "expectedResults":["false", "maybe"]},
                               {"query":["hasKnownSizes", "<t2>"], "expectedResults":["false"]},
                               {"query":["pointsToGlobal", "<t2>"], "expectedResults":["true"]},
                               {"query":["isInvalid", "<t2>"], "expectedResults":["false", "maybe"]}],
                "in": "*",
                "remember": "<t2>"
            },

            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","*", "<t4>","memcpy"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["*","<t3>", "<t4>","memcpy"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","*", "<t4>","*","*", "llvm.memcpy.p0i8.p0i8.i32"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["*","<t3>", "<t4>","*","*", "llvm.memcpy.p0i8.p0i8.i32"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","*", "<t4>","*","*", "llvm.memcpy.p0i8.p0i8.i64"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["*","<t3>", "<t4>","*","*", "llvm.memcpy.p0i8.p0i8.i64"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","*", "<t4>","memmove"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["*","<t3>", "<t4>","memmove"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","*", "<t4>","*","*", "llvm.memmove.p0i8.p0i8.i32"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["*","<t3>", "<t4>","*","*", "llvm.memmove.p0i8.p0i8.i32"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","*", "<t4>","*","*", "llvm.memmove.p0i8.p0i8.i64"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["*","<t3>", "<t4>","*","*", "llvm.memmove.p0i8.p0i8.i64"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t3>","<t4>", "__INSTR_check_pointer"],
                    "stripInboundsOffsets": "<t3>"
                },
                "where": "before",
                "in": "*",
                "remember": "<t3>"
            }
            ]
        },
        {   "instructionsRules":
            [
            {
                "findInstructions": [
                {
                    "instruction": "call",
                    "operands": ["*","<t1>","llvm.lifetime.end.p0i8"]
                }
                ],
                "newInstruction": {
                    "instruction": "call",
                    "operands": ["<t1>", "__INSTR_destroy"]
                },
                "where": "after",
                "in": "*",
                "conditions": [{"query":["isRemembered", "<t1>"], "expectedResults":["true","maybe"]}]
            },
            {
                "findInstructions": [
                {
                    "instruction": "call",
                    "operands": ["*","<t1>","llvm.lifetime.end"]
                }
                ],
                "newInstruction": {
                    "instruction": "call",
                    "operands": ["<t1>", "__INSTR_destroy"]
                },
                "where": "after",
                "in": "*",
                "conditions": [{"query":["isRemembered", "<t1>"], "expectedResults":["true","maybe"]}]
            },
            {
                "findInstructions": [
                {
                    "instruction": "call",
                    "operands": ["<size>","<t1>","llvm.lifetime.start.p0i8"]
                }
                ],
                "newInstruction": {
                    "instruction": "call",
                    "operands": ["<t1>", "<size>", "1", "__INSTR_remember"]
                },
                "where": "after",
                "in": "*",
                "conditions": [{"query":["isRemembered", "<t1>"], "expectedResults":["true","maybe"]}]
            },
            {
                "findInstructions": [
                {
                    "instruction": "call",
                    "operands": ["<size>","<t1>","llvm.lifetime.start"]
                }
                ],
                "newInstruction": {
                    "instruction": "call",
                    "operands": ["<t1>","<size>","1", "__INSTR_remember"]
                },
                "where": "after",
                "in": "*",
                "conditions": [{"query":["isRemembered", "<t1>"], "expectedResults":["true","maybe"]}]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "<t1>",
                    "instruction": "alloca",
                    "operands": ["<t0>"],
                    "getTypeSize": "<t2>"
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t2>", "<t0>", "__INSTR_remember"]
                },
                "where": "after",
                "in": "*",
                "conditions": [{"query":["isRemembered", "<t1>"], "expectedResults":["true","maybe"]}]
            },
            {
                "findInstructions": [
                {
                    "returnValue": "*",
                    "instruction": "ret",
                    "operands": ["*"]
                }
                ],
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["__INSTR_check_leaks"]
                },
                "where": "before",
                "in": "main",
                "conditions": [{"query":["malloc"], "expectedResults": ["true"]}]
            }
            ],
            "globalVariablesRules": [
            {
                "findGlobals": {
                    "globalVariable": "<t1>",
                    "getTypeSize": "<t2>"
                },
                "newInstruction": {
                    "returnValue": "*",
                    "instruction": "call",
                    "operands": ["<t1>","<t2>", "__INSTR_remember_global"]
                },
                "in": "main",
                "conditions": [{"query":["isRemembered", "<t1>"], "expectedResults":["true","maybe"]}]
           }
           ]
         }
       ]
}
